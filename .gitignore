#!/usr/bin/env python
import holidays # This is the pip holiday list
import datetime # Importing datetime module
import time  # This is required to include time module.
from datetime import date # Importing date class from datetime module
import sys # This is for splunk custom commands
import os # This is for splunk custom commands

# Select country
us_holidays = holidays.US()
today = date.today()

sys.path.insert(0, os.path.join(os.path.dirname(_file_), "..", "lib"))
from splunklib.searchcommands import \
    dispatch, ReportingCommand, Configuration, Option, validators

@Configuration()
class ReportingCSC(ReportingCommand):
    """
     the holidaycheck command changes the threshold of a alert for any day that is a federal holiday.
     """
    @Configuration()
    def map(self, events):
        # Put your streaming preop implementation here, or remove the map method,
        # if you have no need for a streaming preop

        n=relative_time(now(), "-1d@d")
        #pass
	#Loop over the events
        for event in events:
		    # Read the _time field since that has the events timestamp
		    # Eventually it would be great to make this configurable, but they can
		    # always manipulate the _time in SPL
            event_date_time = event['_time']
		#Call your function and save it to a new field
		#Save the result in a field called date_is_holiday
		# Again it would be great to make this configurable
            event['date_is_holiday'] = foo(event_date_time)

    def reduce(self, events):
        # Put your reporting implementation
        for event
            # once set enterprice vairble is the vairlabe creation in the barket or

